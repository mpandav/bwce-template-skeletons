apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: odido-bwce-template-s3-api
  title: Odido - BWCE - Download File from S3 bucket as a Service (V5)
  description: Create a new Odido - BWCE project to Download File from S3 bucket
  tags:
  - tibco
  - bwce
  - recommended
spec:
  owner: ACME
  type: service

  parameters:
  - title: Fill in some steps
    required:
    - name
    - description
    properties:
      name:
        title: Name
        type: string
        description: Unique name of the BWCE Project
        ui:field: EntityNamePicker
        ui:autofocus: true
      description:
        title: Description
        type: string
        description: A description for the BWCE Project
  - title: AWS Details
    properties:
      # AWS Connection parameters
      aws_accessKey:
        title: AWS Access Key
        type: string
        description: The AWS Access Key that this BWCE-Project should use to Connect with AWS Instance (S3 bucket connectivity)
        default: 'ASIARC55DQGXXON3TR7X'
      aws_region:
        title: AWS Region
        type: string
        description: The AWS Region that this BWCE-Project should use to Connect with AWS Instance (S3 bucket connectivity)
        default: 'us-west-2'
      aws_accessSecretKey:
        title: AWS Access Secret Key
        type: string
        description: The AWS Access Secret Key that this BWCE-Project should use to Connect with AWS Instance (S3 bucket connectivity)
        default: '#!Ur54lVPPs47bGTRzTDMyOaQhnjYIfbloim4Atg6HV08='
        ui:widget: password # will print '******' as value for property 'password' on Review Step
      aws_sessionToken:
        title: AWS Session Token
        type: string
        description: The AWS Session Token that this BWCE-Project should use to Connect with AWS Instance (S3 bucket connectivity)
        default: '#!Ur54lVPPs47bGTRzTDMyOaQhnjYIfbloim4Atg6HV08='
        ui:widget: password # will print '******' as value for property 'password' on Review Step
        # AWS Functional parameters
      aws_fileKey:
        title: Name of File to download
        type: string
        description: The File (key) that this BWCE-Project should download through BWCE-Project as a service (S3 bucket as a service)
        default: 'User_Data.csv'
      aws_bucketName:
        title: AWS Bucket Name
        type: string
        description: The AWS S3 Bucket that this BWCE-Project should expose through BWCE-Project as a service (S3 bucket as a service)
        default: 'odido-bwce-demo-bucket'
      destination_file_location:
        title: Destination File Location
        type: string
        description: The location where the file will be written
        default: '/tmp/odido/s3/'
      owner:
        title: Owner
        type: string
        description: Owner of the component
        ui:field: OwnerPicker
        ui:options:
          allowedKinds:
          - Group
  - title: Choose a location
    required:
    - repoUrl
    properties:
      repoUrl:
        title: Repository Location
        type: string
        ui:field: RepoUrlPicker
        ui:options:
          allowedHosts:
          - github.com

  # This template is meant to be used on top of an existing template.
  # By adding the following and fetching from an absolute URL you can
  # add in the docs template
  steps:
  - id: fetch
    name: BWCE Skeleton
    action: fetch:template
    input:
      url: ./skeleton-s3-api
      values:
        name: ${{ parameters.name }}
        description: ${{ parameters.description }}
        destination: ${{ parameters.repoUrl | parseRepoUrl }}
        owner: ${{ parameters.owner }}
        aws_accessKey: ${{ parameters.aws_accessKey }}
        aws_accessSecretKey: ${{ parameters.aws_accessSecretKey }}
        aws_sessionToken: ${{ parameters.aws_sessionToken }}
        aws_fileKey: ${{ parameters.aws_fileKey }}
        aws_bucketName: ${{ parameters.aws_bucketName }}
        aws_region: ${{ parameters.aws_region }}
        destination_file_location: ${{ parameters.destination_file_location }}

  - id: publish
    name: Publish
    action: publish:github
    input:
      allowedHosts: ["github.com"]
      description: This is ${{ parameters.name }}
      repoUrl: ${{ parameters.repoUrl }}

  - id: register
    name: Register
    action: catalog:register
    input:
      repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
      catalogInfoPath: "/catalog-info.yaml"

  - id: jenkinsEarBuild
    name: Trigger Jenkins Dataplane Deployment
    action: tibco:jenkins-trigger-ear-build
    input:
      name: ${{ parameters.name }}
      job: Build_Deploy_BWCE_TIBCO_PLATFORM
      jenkinsInstructions: '&bw_project_folder=com.odido-rfp-demo'


  output:
    links:
    - title: Repository
      url: ${{ steps.publish.output.remoteUrl }}
    - title: Open in catalog
      icon: catalog
      entityRef: ${{ steps.register.output.entityRef }}
    - title: Open Jenkins Job
      icon: dashboard
      url: ${{ steps.jenkinsEarBuild.output.jobLink }}
