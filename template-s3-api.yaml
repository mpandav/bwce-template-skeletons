apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: fedex-bwce-template-otk
  title: FedEx - BWCE - Order to Kafka
  description: Create a new FedEx - BWCE project for an order to Kafka
  tags:
  - tibco
  - bwce
  - recommended
spec:
  owner: ACME
  type: service

  parameters:
  - title: Fill in some steps
    required:
    - name
    - description
    properties:
      name:
        title: Name
        type: string
        description: Unique name of the BWCE Project
        ui:field: EntityNamePicker
        ui:autofocus: true
      description:
        title: Description
        type: string
        description: A description for the BWCE Project
      hub-location:
        title: Hub Location
        type: string
        description: The hub location where the project will be deployed
      system:
        title: System
        type: string
        description: Target System to Send Order To
        ui:field: EntityPicker
        ui:options:
          catalogFilter:
            kind: API
      owner:
        title: Owner
        type: string
        description: Owner of the component
        ui:field: OwnerPicker
        ui:options:
          allowedKinds:
          - Group
  - title: Choose a location
    required:
    - repoUrl
    properties:
      repoUrl:
        title: Repository Location
        type: string
        ui:field: RepoUrlPicker
        ui:options:
          allowedHosts:
          - github.com

  # This template is meant to be used on top of an existing template.
  # By adding the following and fetching from an absolute URL you can
  # add in the docs template
  steps:
  - id: fetch
    name: BWCE Skeleton
    action: fetch:template
    input:
      url: ./skeleton-order-to-kafka
      values:
        name: ${{ parameters.name }}
        description: ${{ parameters.description }}
        destination: ${{ parameters.repoUrl | parseRepoUrl }}
        owner: ${{ parameters.owner }}
        system: ${{ parameters.system }}

  - id: publish
    name: Publish
    action: publish:github
    input:
      allowedHosts: ["github.com"]
      description: This is ${{ parameters.name }}
      repoUrl: ${{ parameters.repoUrl }}

  - id: register
    name: Register
    action: catalog:register
    input:
      repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
      catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
    - title: Repository
      url: ${{ steps.publish.output.remoteUrl }}
    - title: Open in catalog
      icon: catalog
      entityRef: ${{ steps.register.output.entityRef }}
